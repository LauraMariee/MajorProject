classDiagram
    AbstractModel <.. MaleModel
    AbstractModel <.. FemaleModel
    AbstractModel .. ModelInformation
    ModelInformation <.. ModelSlider
    AbstractModel ..> ModelController



   class ModelSlider{
    -startPoint : GameObject
    -endPoint : GameObject
    +minSize : int
    +maxSize : int
    +physicalHandle : GameObject
    +handleText : Text
    -PositionToValue(Vector3 position)
    -ValueToPosition(float value)
    -GetHandlePosition()
    -AssignText()
    -Start()
    -Update()
    -GetMinSize()
    -GetMaxSize()
    }


    class ModelController{
    -spawnPosition : Vector3
    -activeModelOrigin : Vector3
    +activeModel : GameObject 
    +List<GameObject> switchModelButtons
    +Start()
    +Update()
    -MoveModel(GameObject previousActive, GameObject newActive)
    }
    
    class ModelInformation{
    -bustMeasurement : int 
    -hipsMeasurement : int 
    -waistMeasurement : int 
    -shoulderMeasurement : int 
    -neckMeasurement : int 
    -MINScale : float 
    -MAXScale : float 
    -modelVariables : List<string> 
    +bustBones : List<GameObject> 
    +hipBones : List<GameObject> 
    +waistBones : List<GameObject> 
    +shoulderBones : List<GameObject> 
    +neckBones : List<GameObject> 
    +bustSliderObject : ModelSlider 
    +hipSliderObject : ModelSlider 
    +waistSliderObject : ModelSlider 
    +shoulderSliderObject : ModelSlider 
    +neckSliderObject : ModelSlider 
    -CreateSliderObjects()
    -SetHandleValue(float minScale, float maxScale, ModelSlider handle, int currentValue)
    -ScaleByValue(float scaleValue, IEnumerable<GameObject> bones)
    -ScaleByValueShoulder(float xValueLeft, float xValueRight, IEnumerable<GameObject> bones)
    +Start()
    +UpdateHandleValue(ModelSlider bustHandle, ModelSlider hipHandle, ModelSlider waistHandle, ModelSlider shoulderHandle, ModelSlider neckHandle, float minScale, float maxScale, float minShoulder, float maxShoulder)
    }


    class AbstractModel{
     -Start()
     -SetBones(string gender)
     -FindAndAddBoneToList(string, string, ICollection<GameObject>)
     -Update()
    }

    class MaleModel{
      -boneDictionary <string, string> : readonly Dictionary 
      +Dictionary<string, string> GetBones()
    }

    class FemaleModel{
      -boneDictionary <string, string> : readonly Dictionary 
      +Dictionary<string, string> GetBones()
    }
            